name: Test

on: [push, pull_request]

jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.variables.outputs.branch }}
      repository_url: ${{ steps.variables.outputs.repository_url }}

    steps:
      - uses: actions/checkout@v2
      - name: Generate variables
        id: variables
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: .github/scripts/variables.sh

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: jekyll build
        run: docker-compose run jekyll build
      - name: Upload site
        uses: actions/upload-artifact@v2
        with:
          name: build-site
          path: _site

  spec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby 2.7
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true

      - uses: actions/setup-java@v2
        with:
          java-version: '1.8'

      - uses: kamiazya/setup-graphviz@v1

      - name: rspec
        run: bundle exec rake

      - name: codecov upload
        run: bundle exec rake codecov:upload || echo 'Codecov upload failed'

      - name: rubocop
        run: bundle exec rubocop --fail-level warning --display-only-fail-level-offenses

  verify:
    runs-on: ubuntu-latest
    needs: variables
    steps:
      - uses: actions/checkout@v2
      - name: Verify build
        run: |
          docker-compose run \
            -e GITHUB_BRANCH=${{ needs.variables.outputs.branch }} \
            -e GITHUB_REPOSITORY_URL=${{ needs.variables.outputs.repository_url }} \
            jekyll build \
            --env=production \
            --verify \
            --site-url=https://theme.example.com/ \
            --ignore-url http://www.wikipedia.org \
            --ignore-url http://restcookbook.com/Basics/loggingin/

      - name: Upload build output artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: verify-site
          path: _site

      - name: Verify absolute URL
        run: grep 'https://theme.example.com/' $(pwd)/_site/index.html

      - name: Verify base URL
        run: grep '"/assets/css/style.css"' $(pwd)/_site/index.html

  remark-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm install
      - uses: prologic/action-remark-lint@v0.0.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check

  # deploy-dry-run:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: deploy dry-run
  #       run: |
  #         docker-compose run \
  #           jekyll deploy \
  #           --env=production \
  #           --dry-run
  #     - name: Upload deploy
  #       uses: actions/upload-artifact@v2
  #       if: always()
  #       with:
  #         name: deploy
  #         path: .
