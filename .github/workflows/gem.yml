name: Ruby Gem

on: [push, pull_request]

jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.variables.outputs.branch }}
      version: ${{ steps.variables.outputs.version }}
      repository_url: ${{ steps.variables.outputs.repository_url }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: '5.x.x'

      - id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10

      - name: Generate variables
        id: variables
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: .github/scripts/variables.sh ${{ steps.gitversion.outputs.legacySemVerPadded }}

  gem:
    needs: variables
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.gem.outputs.name }}

    steps:
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
        bundler-cache: true

    - name: Build gem
      id: gem
      run: .github/scripts/build_gem.sh --version "${{ needs.variables.outputs.version }}" --verbose

    - name: Upload artifact
      uses: actions/upload-artifact@v2-preview
      with:
        name: ${{ steps.gem.outputs.name }}
        path: ${{ steps.gem.outputs.name }}

  publish:
    needs: [gem, variables]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: ${{ needs.gem.outputs.name }}

    - name: Publish to GPR
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OWNER: SwedbankPay
      run: |
        mkdir -p $HOME/.gem
        touch $HOME/.gem/credentials
        chmod 0600 $HOME/.gem/credentials
        printf -- "---\n:github: Bearer ${GITHUB_TOKEN}\n" > $HOME/.gem/credentials
        set -e
        gem push --KEY github \
                 --host https://rubygems.pkg.github.com/${OWNER} \
                 ${{ needs.gem.outputs.name }} \
          || echo "push failed ($?) probably due to version '${{ needs.variables.outputs.version }}' already existing in GPR."

    - name: Publish to RubyGems
      if: startsWith(github.ref, 'refs/tags/') # Only publish tagged commits
      env:
        RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
      run: |
        mkdir -p $HOME/.gem
        touch $HOME/.gem/credentials
        chmod 0600 $HOME/.gem/credentials
        printf -- "---\n:rubygems_api_key: ${RUBYGEMS_API_KEY}\n" > $HOME/.gem/credentials
        gem push ${{ needs.gem.outputs.name }}
